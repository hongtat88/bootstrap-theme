// -----------------------------------------------------------------------------
// This file contains all application-wide Sass functions.
// -----------------------------------------------------------------------------

@use './variables';

/// Native `url(..)` function wrapper
/// @param {String} $base - base URL for the asset
/// @param {String} $type - asset type folder (e.g. `fonts/`)
/// @param {String} $path - asset path
/// @return {Url}
@function asset($base, $type, $path) {
  @return url($base + $type + $path);
}

/// Returns URL to an image based on its path
/// @param {String} $path - image path
/// @param {String} $base [$asset-url] - asset URL
/// @return {Url}
/// @require $base-url
@function image($path, $base: variables.$asset-url) {
  @return asset($base, 'images/', $path);
}

/// Returns URL to a font based on its path
/// @param {String} $path - font path
/// @param {String} $base [$asset-url] - asset URL
/// @return {Url}
/// @require $base-url
@function font($path, $base: variables.$asset-url) {
  @return asset($base, 'fonts/', $path);
}

/// Tint a color: mix a color with white
/// @param {Color} $color - color to mix with white
/// @param {Number} $weight - percentage of `$color` in returned color 
/// @return {Color}
@function tint-color($color, $weight) {
  @return mix(white, $color, $weight);
}

/// Shade a color: mix a color with black
/// @param {Color} $color - color to shade
/// @param {Number} $weight - percentage of `$color` in returned color
/// @return {Color}
@function shade-color($color, $weight) {
  @return mix(black, $color, $weight);
}
